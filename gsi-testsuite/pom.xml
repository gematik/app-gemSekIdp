<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.gematik.idp</groupId>
  <artifactId>gsi-testsuite</artifactId>
  <version>8.1.0</version>
  <packaging>jar</packaging>
  <!--kal: hier könnt ihr eurer Testsuite einen Namen geben der später im Grafana angezeigt werden soll -->
  <!--<name>TODO</name>-->
  <description>Testsuite fuer sektorale IDPs</description>

  <properties>
    <version.idp-commons>29.2.1</version.idp-commons>
    <java.version>21</java.version>
    <version.lombok>1.18.38</version.lombok>
    <version.maven-compiler-plugin>3.14.0</version.maven-compiler-plugin>
    <version.maven-enforcer-plugin>3.5.0</version.maven-enforcer-plugin>
    <version.maven-failsafe-plugin>3.5.3</version.maven-failsafe-plugin>
    <version.maven-resources-plugin>3.3.1</version.maven-resources-plugin>
    <version.maven-surefire-plugin>3.5.3</version.maven-surefire-plugin>
    <version.spotless-maven-plugin>2.44.5</version.spotless-maven-plugin>
    <version.spotless.google-java-format>1.17.0</version.spotless.google-java-format>
    <version.tiger>3.7.9</version.tiger>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.5.18</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>de.gematik.test</groupId>
      <artifactId>tiger-test-lib</artifactId>
      <version>${version.tiger}</version>
      <exclusions>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-servlet</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-client</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>de.gematik.idp</groupId>
      <artifactId>idp-commons</artifactId>
      <version>${version.idp-commons}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${version.lombok}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${version.maven-resources-plugin}</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${version.maven-compiler-plugin}</version>
          <configuration>
            <encoding>${project.build.sourceEncoding}</encoding>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <debug>true</debug>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${version.maven-enforcer-plugin}</version>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <message>Java version should be ${java.version}.</message>
                  <version>${java.version}</version>
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${version.maven-surefire-plugin}</version>
        <configuration>
          <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
          <skipTests>${skip.unittests}</skipTests>
        </configuration>
      </plugin>
      <!-- tag::generator-plugin[] -->
      <!-- optional plugin to dynamically create JUnit driver classes on the fly.
                  You may omit this plugin if you have written your driver classes manually.
                  -->
      <!-- create serenity-summary.json file for DWH import -->
      <plugin>
        <groupId>net.serenity-bdd.maven.plugins</groupId>
        <artifactId>serenity-maven-plugin</artifactId>
        <version>4.2.34</version>
        <configuration>
          <!-- tiger-maven-plugin does not generate the json-summary report which is required for DWH import -->
          <reports>json-summary</reports>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.serenity-bdd</groupId>
            <artifactId>serenity-json-summary-report</artifactId>
            <version>4.2.34</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>serenity-reports</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>aggregate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>de.gematik.test</groupId>
        <artifactId>tiger-maven-plugin</artifactId>
        <version>${version.tiger}</version>
        <executions>
          <execution>
            <id>generate-tiger-drivers</id>
            <goals>
              <goal>generate-drivers</goal>
            </goals>
            <phase>generate-test-sources</phase>
            <configuration>
              <!-- mandatory -->
              <glues>
                <glue>de.gematik.test.tiger.glue</glue>
                <glue>de.gematik.idp.gsi.test.steps</glue>
                <!-- add your packages here -->
              </glues>
              <!-- optional -->
              <featuresDir>${project.basedir}/src/test/resources/features</featuresDir>
              <!-- optional -->
              <includes>
                <include>**/*.feature</include>
              </includes>
              <!-- optional -->
              <driverPackage>de.gematik.test.tiger.examples.bdd.drivers</driverPackage>
              <!-- optional -->
              <!--suppress UnresolvedMavenProperty -->
              <driverClassName>Driver${ctr}IT</driverClassName>
              <!-- optional, defaults to the templated located at
                                          /src/main/resources/driverClassTemplate.jtmpl
                                          in the tiger-maven-plugin module.
                                          Use separate template file if you have spring boot apps to test
                                          or need to do some more fancy set up stuff.
                                          <templateFile>${project.basedir}/..../XXXX.jtmpl</templateFile>
                                          -->
              <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
              <skip>${skip.inttests}</skip>
            </configuration>
          </execution>
          <execution>
            <id>generate-tiger-report</id>
            <goals>
              <goal>generate-serenity-reports</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${version.maven-failsafe-plugin}</version>
        <configuration>
          <includes>
            <!-- adapt to the class names of your driver classes -->
            <include>**/Driver*IT.java</include>
          </includes>
          <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
          <skipITs>${skip.inttests}</skipITs>
          <systemPropertyVariables>
            <!--suppress UnresolvedMavenProperty -->
            <cucumber.filter.tags>@Approval and not @OpenBug</cucumber.filter.tags>
          </systemPropertyVariables>
          <environmentVariables>
            <TIGER_GSI_VERSION>${project.version}</TIGER_GSI_VERSION>
          </environmentVariables>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${version.spotless-maven-plugin}</version>
        <configuration>
          <formats>
            <!-- you can define as many formats as you want, each is independent -->
            <format>
              <!-- define the files to apply to -->
              <includes>
                <include>**/*.yml</include>
              </includes>
              <excludes>
                <exclude>**/target/**/*</exclude>
              </excludes>
              <!-- define the steps to apply to those files -->
              <trimTrailingWhitespace/>
              <endWithNewline/>
              <indent>
                <spaces>true</spaces>
                <spacesPerTab>2</spacesPerTab>
              </indent>
            </format>
          </formats>
          <java>
            <toggleOffOn/>
            <googleJavaFormat>
              <version>${version.spotless.google-java-format}</version>
              <style>GOOGLE</style>
              <reflowLongStrings>true</reflowLongStrings>
            </googleJavaFormat>
          </java>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <excludes>
              <exclude>**/target/**/*</exclude>
            </excludes>
          </markdown>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.5.1</version>
        <executions>
          <execution>
            <id>check-file-existence</id>
            <phase>verify</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <!--suppress UnresolvedMavenProperty, MavenModelInspection -->
              <skip>${skip.inttests}</skip>
              <executable>sh</executable>
              <arguments>
                <argument>-c</argument>
                <!-- verify that testsuite was executed and generates a report-->
                <argument>test -f ./target/site/serenity/index.html</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
